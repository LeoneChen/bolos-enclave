SECP256K1 := secp256k1
SODIUM := libsodium-1.0.12/src/libsodium
UECC := micro-ecc
CTAES := ctaes

KEY_PATH := Enclave/BolosSGX_private.pem

######## SGX SDK Settings ########

SGX_SDK ?= /opt/intel/sgxsdk
SGX_MODE ?= HW
SGX_ARCH ?= x64

ifeq ($(shell getconf LONG_BIT), 32)
	SGX_ARCH := x86
else ifeq ($(findstring -m32, $(CXXFLAGS)), -m32)
	SGX_ARCH := x86
endif

ifeq ($(SGX_ARCH), x86)
	SGX_COMMON_CFLAGS := -m32
	SGX_LIBRARY_PATH := $(SGX_SDK)/lib
	SGX_ENCLAVE_SIGNER := $(SGX_SDK)/bin/x86/sgx_sign
	SGX_EDGER8R := $(SGX_SDK)/bin/x86/sgx_edger8r
else
	SGX_COMMON_CFLAGS := -m64
	SGX_LIBRARY_PATH := $(SGX_SDK)/lib64
	SGX_ENCLAVE_SIGNER := $(SGX_SDK)/bin/x64/sgx_sign
	SGX_EDGER8R := $(SGX_SDK)/bin/x64/sgx_edger8r
endif

ifeq ($(SGX_DEBUG), 1)
ifeq ($(SGX_PRERELEASE), 1)
$(error Cannot set SGX_DEBUG and SGX_PRERELEASE at the same time!!)
endif
endif

ifeq ($(SGX_DEBUG), 1)
        SGX_COMMON_CFLAGS += -O0 -g -DSGX_DEBUG
else
        SGX_COMMON_CFLAGS += -O2
endif

ifeq ($(SIMU), 1)
	SGX_COMMON_CFLAGS += -DSIMU
endif

######## Enclave Settings ########

ifneq ($(SGX_MODE), HW)
	Trts_Library_Name := sgx_trts_sim
	Service_Library_Name := sgx_tservice_sim
else
	Trts_Library_Name := sgx_trts
	Service_Library_Name := sgx_tservice
endif
Crypto_Library_Name := sgx_tcrypto

Enclave_Link_Flags := $(SGX_COMMON_CFLAGS) -L$(SGX_LIBRARY_PATH) \
	-Wl,--whole-archive -lSGXSanRTEnclave -l$(Trts_Library_Name) -Wl,--no-whole-archive \
	-Wl,--start-group -lsgx_tkey_exchange -l$(Crypto_Library_Name) -l$(Service_Library_Name) -Wl,--end-group \
	-Wl,-Bsymbolic \
	-Wl,-eenclave_entry -Wl,--export-dynamic  \
	-Wl,--defsym,__ImageBase=0

Enclave_Name := BolosSGX.so
Signed_Enclave_Name := BolosSGX_signed.so
Enclave_Config_File := Enclave/BolosSGX.config.xml

all: build

CFLAGS := -I$(SECP256K1) -I$(SECP256K1)/include -I$(SECP256K1)/src
CFLAGS += -I$(SODIUM)/include -I$(SODIUM)/include/sodium
CFLAGS += -I$(CTAES)
CFLAGS += -Isha3
CFLAGS += -Iripemd160
CFLAGS += -I$(UECC)
CFLAGS += -Imoxie

CFLAGS += -DUSE_LOW_HEAP=1
CFLAGS += -DuECC_SUPPORTS_secp160r1=0 -DuECC_SUPPORTS_secp192r1=0 -DuECC_SUPPORTS_secp224r1=0 -DuECC_SUPPORTS_secp256k1=0 -DuECC_ASM=uECC_asm_none
CFLAGS += -DCONFIGURED
CFLAGS += -DUSE_LOW_HEAP
CFLAGS += -DUSE_KECCAK -DFULL_SHA3_FAMILY_SUPPORT

CFLAGS += -DBOLOS_MAJOR_VERSION=1 -DBOLOS_MINOR_VERSION=0 -DBOLOS_PATCH_VERSION=0
CFLAGS += -DBOLOS_SHARED_MEMORY_SIZE=2048

CFLAGS += -I$(SGX_SDK)/include -I$(SGX_SDK)/include/tlibc -I$(SGX_SDK)/include/stlport -Iplatform_sgx -IEnclave -I.
CFLAGS += $(SGX_COMMON_CFLAGS) -fvisibility=hidden -fpie -fstack-protector
CFLAGS += -DSGX

ifeq ($(KAFL_FUZZER), 1)
CFLAGS += \
	-fno-discard-value-names\
	-flegacy-pass-manager \
	-Xclang -load -Xclang $(SGX_SDK)/lib64/libSGXSanPass.so
HOST_CFLAGS = \
	$(SGX_COMMON_CFLAGS) \
	-fPIC \
	-I$(SGX_SDK)/include \
	-IEnclave \
	-I../host/dylib_sgx/
HOST_Link_Flags = \
	$(SGX_COMMON_CFLAGS) \
	-L$(SGX_LIBRARY_PATH) -lsgx_urts_sim -lsgx_uae_service_sim -lsgx_ukey_exchange -lpthread \
	-ldl \
	-Wl,-rpath=$(SGX_LIBRARY_PATH) \
	-Wl,-whole-archive -lSGXSanRTApp -Wl,-no-whole-archive \
	-lSGXFuzzerRT \
	-lcrypto \
	-lboost_program_options \
	-rdynamic \
	-lnyx_agent
Enclave_Link_Flags += -shared
else
CFLAGS += \
	-fno-discard-value-names\
	-flegacy-pass-manager \
	-Xclang -load -Xclang $(SGX_SDK)/lib64/libSGXSanPass.so \
	-fsanitize-coverage=inline-8bit-counters,bb,no-prune,pc-table,trace-cmp \
	-fprofile-instr-generate \
	-fcoverage-mapping
HOST_CFLAGS = \
	$(SGX_COMMON_CFLAGS) \
	-fPIC \
	-I$(SGX_SDK)/include \
	-IEnclave \
	-I../host/dylib_sgx/ \
	-fsanitize-coverage=inline-8bit-counters,bb,no-prune,pc-table,trace-cmp \
	-fprofile-instr-generate \
	-fcoverage-mapping
Enclave_Link_Flags += -shared -fuse-ld=${LD} -fprofile-instr-generate
HOST_Link_Flags = \
	$(SGX_COMMON_CFLAGS) \
	-L$(SGX_LIBRARY_PATH) -lsgx_urts_sim -lsgx_uae_service_sim -lsgx_ukey_exchange -lpthread \
	-ldl \
	-Wl,-rpath=$(SGX_LIBRARY_PATH) \
	-Wl,-whole-archive -lSGXSanRTApp -Wl,-no-whole-archive \
	-lSGXFuzzerRT \
	-lcrypto \
	-lboost_program_options \
	-rdynamic \
	-fuse-ld=${LD} \
	-fcoverage-mapping
endif

OBJDIR := obj-sgx
MKDIR := mkdir -p
RMDIR := rmdir -p
RM := rm -rf
CP := cp
LN := $(LD)
ARCH_EXE=$(OBJDIR)/$(Enclave_Name)
ARCH_EXE_SIGNED=$(OBJDIR)/$(Signed_Enclave_Name)
ARCH_OBJS=$(OBJS:%=$(OBJDIR)/%.o)

OBJS:=\
	Enclave/BolosSGX_t \
	bolos_portable \
	bolos_printf \
	platform_sgx/bolos_platform \
	platform_sgx/platform_al \
	platform_sgx/platform_errno \
	platform_sgx/platform_persistent_context \
	platform_sgx/moxie_swi_bolos_crypto \
	platform_sgx/moxie_swi_bolos_antireplay \
	platform_sgx/moxie_swi_bolos_time \
	platform_sgx/sgx_pse \
	$(UECC)/uECC \
	$(CTAES)/ctaes \
	sha3/sha3 \
	ripemd160/ripemd160 \
	moxie/moxie \
	moxie/machine \
	moxie/moxie_swi_sodium \
	moxie/moxie_swi_common \
	moxie/moxie_swi_bolos_core \
	moxie/moxie_swi_bolos_continuation \
	moxie/moxie_swi_bolos_utils \
	moxie/moxie_swi_dispatcher \
	moxie/moxie_swi_bolos_wrapping \
	moxie/moxie_swi_bolos_shared_memory \
	moxie/moxie_swi_bolos_endorsement \
	$(SODIUM)/crypto_aead/chacha20poly1305/sodium/aead_chacha20poly1305 \
	$(SODIUM)/crypto_auth/crypto_auth \
	$(SODIUM)/crypto_auth/hmacsha256/auth_hmacsha256 \
	$(SODIUM)/crypto_auth/hmacsha512/auth_hmacsha512 \
	$(SODIUM)/crypto_auth/hmacsha512256/auth_hmacsha512256 \
	$(SODIUM)/crypto_box/crypto_box \
	$(SODIUM)/crypto_box/crypto_box_easy \
	$(SODIUM)/crypto_box/crypto_box_seal \
	$(SODIUM)/crypto_box/curve25519xsalsa20poly1305/box_curve25519xsalsa20poly1305 \
	$(SODIUM)/crypto_core/curve25519/ref10/curve25519_ref10 \
	$(SODIUM)/crypto_core/hsalsa20/ref2/core_hsalsa20_ref2 \
	$(SODIUM)/crypto_core/hsalsa20/core_hsalsa20 \
	$(SODIUM)/crypto_core/salsa/ref/core_salsa_ref \
	$(SODIUM)/crypto_generichash/crypto_generichash \
	$(SODIUM)/crypto_generichash/blake2b/generichash_blake2 \
	$(SODIUM)/crypto_generichash/blake2b/ref/blake2b-compress-ref \
	$(SODIUM)/crypto_generichash/blake2b/ref/blake2b-ref \
	$(SODIUM)/crypto_generichash/blake2b/ref/generichash_blake2b \
	$(SODIUM)/crypto_hash/crypto_hash \
	$(SODIUM)/crypto_hash/sha256/hash_sha256 \
	$(SODIUM)/crypto_hash/sha256/cp/hash_sha256_cp \
	$(SODIUM)/crypto_hash/sha512/hash_sha512 \
	$(SODIUM)/crypto_hash/sha512/cp/hash_sha512_cp \
	$(SODIUM)/crypto_onetimeauth/crypto_onetimeauth \
	$(SODIUM)/crypto_onetimeauth/poly1305/onetimeauth_poly1305 \
	$(SODIUM)/crypto_onetimeauth/poly1305/donna/poly1305_donna \
	$(SODIUM)/crypto_pwhash/scryptsalsa208sha256/crypto_scrypt-common \
	$(SODIUM)/crypto_pwhash/scryptsalsa208sha256/scrypt_platform \
	$(SODIUM)/crypto_pwhash/scryptsalsa208sha256/pbkdf2-sha256 \
	$(SODIUM)/crypto_pwhash/scryptsalsa208sha256/pwhash_scryptsalsa208sha256 \
	$(SODIUM)/crypto_pwhash/scryptsalsa208sha256/nosse/pwhash_scryptsalsa208sha256_nosse \
	$(SODIUM)/crypto_pwhash/crypto_pwhash \
	$(SODIUM)/crypto_pwhash/argon2/pwhash_argon2i \
	$(SODIUM)/crypto_pwhash/argon2/argon2 \
	$(SODIUM)/crypto_pwhash/argon2/argon2-core \
	$(SODIUM)/crypto_pwhash/argon2/argon2-encoding \
	$(SODIUM)/crypto_pwhash/argon2/argon2-fill-block-ref \
	$(SODIUM)/crypto_pwhash/argon2/blake2b-long \
	$(SODIUM)/crypto_scalarmult/crypto_scalarmult \
	$(SODIUM)/crypto_scalarmult/curve25519/scalarmult_curve25519 \
	$(SODIUM)/crypto_secretbox/crypto_secretbox \
	$(SODIUM)/crypto_secretbox/crypto_secretbox_easy \
	$(SODIUM)/crypto_secretbox/xsalsa20poly1305/secretbox_xsalsa20poly1305 \
	$(SODIUM)/crypto_shorthash/crypto_shorthash \
	$(SODIUM)/crypto_shorthash/siphash24/shorthash_siphash24 \
	$(SODIUM)/crypto_shorthash/siphash24/ref/shorthash_siphash24_ref \
	$(SODIUM)/crypto_sign/crypto_sign \
	$(SODIUM)/crypto_sign/ed25519/sign_ed25519 \
	$(SODIUM)/crypto_sign/ed25519/ref10/keypair \
	$(SODIUM)/crypto_sign/ed25519/ref10/open \
	$(SODIUM)/crypto_sign/ed25519/ref10/sign \
	$(SODIUM)/crypto_stream/crypto_stream \
	$(SODIUM)/crypto_stream/chacha20/stream_chacha20 \
	$(SODIUM)/crypto_stream/chacha20/ref/chacha20_ref \
	$(SODIUM)/crypto_stream/salsa20/stream_salsa20 \
	$(SODIUM)/crypto_stream/xsalsa20/stream_xsalsa20 \
	$(SODIUM)/crypto_verify/sodium/verify \
	$(SODIUM)/randombytes/randombytes \
	$(SODIUM)/sodium/core \
	$(SODIUM)/sodium/runtime \
	$(SODIUM)/sodium/utils \
	$(SODIUM)/sodium/version \
	$(SODIUM)/crypto_scalarmult/curve25519/ref10/x25519_ref10 \
	$(SODIUM)/crypto_stream/salsa20/ref/salsa20_ref \
	$(SODIUM)/randombytes/sysrandom/randombytes_sysrandom

$(OBJDIR):
	$(MKDIR) $(OBJDIR)

$(OBJDIR)/Enclave:
	$(MKDIR) $(OBJDIR)/Enclave

$(OBJDIR)/$(SECP256K1):
	$(MKDIR) $(OBJDIR)/$(SECP256K1)

$(OBJDIR)/$(UECC):
	$(MKDIR) $(OBJDIR)/$(UECC)

$(OBJDIR)/$(CTAES):
	$(MKDIR) $(OBJDIR)/$(CTAES)

$(OBJDIR)/sha3:
	$(MKDIR) $(OBJDIR)/sha3

$(OBJDIR)/ripemd160:
	$(MKDIR) $(OBJDIR)/ripemd160

$(OBJDIR)/platform_sgx:
	$(MKDIR) $(OBJDIR)/platform_sgx

$(OBJDIR)/$(SODIUM):	
	$(MKDIR) $(OBJDIR)/$(SODIUM) \
	$(MKDIR) $(OBJDIR)/$(SODIUM)/sodium \
	$(MKDIR) $(OBJDIR)/$(SODIUM)/crypto_aead/ \
	$(MKDIR) $(OBJDIR)/$(SODIUM)/crypto_aead/chacha20poly1305 \
	$(MKDIR) $(OBJDIR)/$(SODIUM)/crypto_aead/chacha20poly1305/sodium \
	$(MKDIR) $(OBJDIR)/$(SODIUM)/crypto_auth \
	$(MKDIR) $(OBJDIR)/$(SODIUM)/crypto_auth/hmacsha256 \
	$(MKDIR) $(OBJDIR)/$(SODIUM)/crypto_auth/hmacsha512 \
	$(MKDIR) $(OBJDIR)/$(SODIUM)/crypto_auth/hmacsha512256 \
	$(MKDIR) $(OBJDIR)/$(SODIUM)/crypto_box/crypto_box \
	$(MKDIR) $(OBJDIR)/$(SODIUM)/crypto_box/curve25519xsalsa20poly1305 \
	$(MKDIR) $(OBJDIR)/$(SODIUM)/crypto_core/ \
	$(MKDIR) $(OBJDIR)/$(SODIUM)/crypto_core/curve25519 \
	$(MKDIR) $(OBJDIR)/$(SODIUM)/crypto_core/curve25519/ref10 \
	$(MKDIR) $(OBJDIR)/$(SODIUM)/crypto_core/hsalsa20/ \
	$(MKDIR) $(OBJDIR)/$(SODIUM)/crypto_core/hsalsa20/ref2 \
	$(MKDIR) $(OBJDIR)/$(SODIUM)/crypto_core/salsa \
	$(MKDIR) $(OBJDIR)/$(SODIUM)/crypto_core/salsa/ref \
	$(MKDIR) $(OBJDIR)/$(SODIUM)/crypto_generichash/ \
	$(MKDIR) $(OBJDIR)/$(SODIUM)/crypto_generichash/crypto_generichash \
	$(MKDIR) $(OBJDIR)/$(SODIUM)/crypto_generichash/blake2b \
	$(MKDIR) $(OBJDIR)/$(SODIUM)/crypto_generichash/blake2b/ref \
	$(MKDIR) $(OBJDIR)/$(SODIUM)/crypto_hash/ \
	$(MKDIR) $(OBJDIR)/$(SODIUM)/crypto_hash/crypto_hash \
	$(MKDIR) $(OBJDIR)/$(SODIUM)/crypto_hash/sha256 \
	$(MKDIR) $(OBJDIR)/$(SODIUM)/crypto_hash/sha256/cp \
	$(MKDIR) $(OBJDIR)/$(SODIUM)/crypto_hash/sha512 \
	$(MKDIR) $(OBJDIR)/$(SODIUM)/crypto_hash/sha512/cp \
	$(MKDIR) $(OBJDIR)/$(SODIUM)/crypto_onetimeauth \
	$(MKDIR) $(OBJDIR)/$(SODIUM)/crypto_onetimeauth/poly1305 \
	$(MKDIR) $(OBJDIR)/$(SODIUM)/crypto_onetimeauth/poly1305/donna \
	$(MKDIR) $(OBJDIR)/$(SODIUM)/crypto_pwhash \
	$(MKDIR) $(OBJDIR)/$(SODIUM)/crypto_pwhash/scryptsalsa208sha256 \
	$(MKDIR) $(OBJDIR)/$(SODIUM)/crypto_pwhash/scryptsalsa208sha256/nosse \
	$(MKDIR) $(OBJDIR)/$(SODIUM)/crypto_pwhash/argon2 \
	$(MKDIR) $(OBJDIR)/$(SODIUM)/crypto_scalarmult \
	$(MKDIR) $(OBJDIR)/$(SODIUM)/crypto_scalarmult/curve25519 \
	$(MKDIR) $(OBJDIR)/$(SODIUM)/crypto_secretbox \
	$(MKDIR) $(OBJDIR)/$(SODIUM)/crypto_secretbox/xsalsa20poly1305 \
	$(MKDIR) $(OBJDIR)/$(SODIUM)/crypto_shorthash \
	$(MKDIR) $(OBJDIR)/$(SODIUM)/crypto_shorthash/siphash24 \
	$(MKDIR) $(OBJDIR)/$(SODIUM)/crypto_shorthash/siphash24/ref \
	$(MKDIR) $(OBJDIR)/$(SODIUM)/crypto_sign \
	$(MKDIR) $(OBJDIR)/$(SODIUM)/crypto_sign/ed25519 \
	$(MKDIR) $(OBJDIR)/$(SODIUM)/crypto_sign/ed25519/ref10 \
	$(MKDIR) $(OBJDIR)/$(SODIUM)/crypto_stream \
	$(MKDIR) $(OBJDIR)/$(SODIUM)/crypto_stream/chacha20 \
	$(MKDIR) $(OBJDIR)/$(SODIUM)/crypto_stream/chacha20/ref \
	$(MKDIR) $(OBJDIR)/$(SODIUM)/crypto_stream/salsa20 \
	$(MKDIR) $(OBJDIR)/$(SODIUM)/crypto_stream/salsa20/ref \
	$(MKDIR) $(OBJDIR)/$(SODIUM)/crypto_stream/xsalsa20 \
	$(MKDIR) $(OBJDIR)/$(SODIUM)/randombytes \
	$(MKDIR) $(OBJDIR)/$(SODIUM)/randombytes/sysrandom \
	$(MKDIR) $(OBJDIR)/$(SODIUM)/crypto_verify \
	$(MKDIR) $(OBJDIR)/$(SODIUM)/crypto_verify/sodium \
	$(MKDIR) $(OBJDIR)/$(SODIUM)/crypto_scalarmult \
	$(MKDIR) $(OBJDIR)/$(SODIUM)/crypto_scalarmult/curve25519 \
	$(MKDIR) $(OBJDIR)/$(SODIUM)/crypto_scalarmult/curve25519/ref10 

$(OBJDIR)/moxie:
	$(MKDIR) $(OBJDIR)/moxie


#
# Build
#

.phony: build
build: $(OBJDIR) $(OBJDIR)/platform_sgx $(OBJDIR)/moxie $(OBJDIR)/$(SECP256K1) $(OBJDIR)/$(SODIUM) $(OBJDIR)/$(UECC) $(OBJDIR)/$(CTAES) $(OBJDIR)/sha3 $(OBJDIR)/ripemd160 $(OBJDIR)/Enclave $(ARCH_EXE) $(OBJDIR)/FuzzBolosEnclave

Enclave/BolosSGX_u.c: Enclave/BolosSGX.edl
	cd Enclave && $(SGX_EDGER8R) --untrusted BolosSGX.edl --search-path $(SGX_SDK)/include --dump-parse ../Enclave.edl.json

$(OBJDIR)/BolosSGX_u.o: Enclave/BolosSGX_u.c
	$(CC) $(HOST_CFLAGS) -c $< -o $@ \
	-flegacy-pass-manager \
	-Xclang -load -Xclang $(SGX_SDK)/lib64/libSGXFuzzerPass.so 

$(OBJDIR)/bolos_enclave.o: ../host/dylib_sgx/bolos_enclave.c Enclave/BolosSGX_u.c
	$(CC) $(HOST_CFLAGS) -c $< -o $@

$(OBJDIR)/FuzzBolosEnclave: $(OBJDIR)/bolos_enclave.o $(OBJDIR)/BolosSGX_u.o
	$(CXX) $^ -o $@ $(HOST_Link_Flags)

Enclave/BolosSGX_t.c: Enclave/BolosSGX.edl
	cd Enclave && $(SGX_EDGER8R) --trusted BolosSGX.edl --search-path $(SGX_SDK)/include

$(ARCH_EXE): $(ARCH_OBJS)
	$(CXX) $^ -o $@ $(Enclave_Link_Flags)

$(ARCH_EXE_SIGNED): $(ARCH_EXE)
	@$(SGX_ENCLAVE_SIGNER) sign -key $(KEY_PATH) -enclave $(ARCH_EXE) -out $@ -config $(Enclave_Config_File)

$(OBJDIR)/%.o: %.c
	$(CC) $(CFLAGS) -c -o $@ $<

$(OBJDIR)/%.o: %.cpp
	$(CC) $(CFLAGS) -c -o $@ $<

$(OBJDIR)/%.o: %.s
	$(AS) $(AFLAGS) -o $@ $<

clean:
	-$(RM) $(OBJDIR)

